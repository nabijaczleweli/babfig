#!/bin/sh
# Based on https://hisham.hm/2019/02/12/splitting-a-git-commit-into-one-commit-per-file/

message="$(git log --pretty=%B --no-show-signature -1)"

[ $(git status --porcelain --untracked-files=no | wc -l) = 0 ] && git reset --soft HEAD^

ret=0

[ $# -gt 0 ] && {
	fs=$(printf '%s, ' "$@")
	git commit "$@" -nm "${fs%, }: $message" || ret=1
	git commit      -nm "$message" || ret=1
	exit $ret
}

git status --porcelain --untracked-files=no | {
	commit() {
		[ -z "$1" ] && shift
		git commit "$@" -nm "$pref$file1$op$file2: $message" || ret=1
	}

	while read -r status file1 op file2 _; do
		echo "$status: $file1 $op $file2"
	
		pref=
		case "$status" in
			M) ;;
			A) pref="add " ;;
			D) pref="remove " ;;
			R) pref="rename "; op=" -> " ;;
			*) pref="$status? "; ret=1 ;;	
		esac

		commit "$file2" "$file1"
	done
	exit $ret
}
